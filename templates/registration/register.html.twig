{% extends 'base.html.twig' %}

{% block title %}Register{% endblock %}

{% block body %}
<div id="app" class="w-full max-w-md bg-white rounded-lg shadow-xl p-6 mx-auto mt-10">
    <h1 class="text-3xl font-bold text-center mb-6 text-gray-800">Register</h1>

    {{ form_start(registrationForm, {'attr': {'id': 'registrationForm', 'class': 'space-y-5', '@submit.prevent': 'validateForm'}}) }}

        <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mt-1 mb-1">Email</label>
            {{ form_widget(registrationForm.email, {'attr': {'class': 'w-full p-3 rounded bg-gray-50 border border-gray-300 text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500'}}) }}
        </div>

        <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mt-1 mb-1">Password</label>
            <div class="relative">
                <input :type="showPassword ? 'text' : 'password'" v-model="password" id="password" name="password" class="w-full p-3 rounded border text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2" :class="passwordValid ? 'border-green-500 focus:ring-green-500' : 'border-red-500 focus:ring-red-500'" @input="validatePassword" :value="password">
                <span @click="togglePassword('showPassword')" class="absolute inset-y-0 right-3 flex items-center cursor-pointer text-gray-600">
                    <i :class="showPassword ? 'fas fa-eye' : 'fas fa-eye-slash'"></i>
                </span>
            </div>
            <ul class="text-sm mt-2">
                <li :class="password.length >= 8 ? 'text-green-600' : 'text-red-600'">✔ At least 8 characters</li>
                <li :class="/[A-Z]/.test(password) ? 'text-green-600' : 'text-red-600'">✔ One uppercase letter</li>
                <li :class="/\d/.test(password) ? 'text-green-600' : 'text-red-600'">✔ One number</li>
                <li :class="/[@$!%*?&]/.test(password) ? 'text-green-600' : 'text-red-600'">✔ One special character</li>
            </ul>
        </div>

        <div>
            <label for="passwordConfirmation" class="block text-sm font-medium text-gray-700 mt-1 mb-1">Confirm Password</label>
            <div class="relative">
                <input :type="showConfirmPassword ? 'text' : 'password'" v-model="passwordConfirmation" id="passwordConfirmation" class="w-full p-3 rounded border text-gray-800 placeholder-gray-400 focus:outline-none focus:ring-2" :class="passwordsMatch ? 'border-green-500 focus:ring-green-500' : 'border-red-500 focus:ring-red-500'" @input="validatePassword">
                <span @click="togglePassword('showConfirmPassword')" class="absolute inset-y-0 right-3 flex items-center cursor-pointer text-gray-600">
                    <i :class="showConfirmPassword ? 'fas fa-eye' : 'fas fa-eye-slash'"></i>
                </span>
            </div>
            <p v-if="!passwordsMatch && passwordConfirmation" class="text-red-600 text-sm mt-1">Passwords do not match</p>
        </div>

        <button type="submit" :disabled="!passwordValid || !passwordsMatch" class="w-full bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white font-bold py-3 rounded-lg shadow-lg transition disabled:opacity-50">
            Register
        </button>

    {{ form_end(registrationForm) }}

    <div class="text-center text-sm mt-6">
        <p class="text-gray-600">Already have an account? <a href="{{ path('login') }}" class="text-blue-500 hover:underline">Login here</a></p>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js"></script>
<script>
const app = Vue.createApp({
    data() {
        return {
            password: '',
            passwordConfirmation: '',
            showPassword: false,
            showConfirmPassword: false,
            passwordValid: false,
            passwordsMatch: false
        };
    },
    methods: {
        validatePassword() {
            this.passwordValid = this.password.length >= 8 && /[A-Z]/.test(this.password) && /\d/.test(this.password) && /[@$!%*?&]/.test(this.password);
            this.passwordsMatch = this.password === this.passwordConfirmation;
        },
        togglePassword(field) {
            this[field] = !this[field];
        },
        validateForm() {
            if (this.passwordValid && this.passwordsMatch) {
                document.getElementById('registrationForm').submit();
            }
        }
    }
});
app.mount('#app');
</script>

{% endblock %}
